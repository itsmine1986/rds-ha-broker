{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clientAccessName": {
      "type": "string",
      "defaultValue": "HARDCB",
      "metadata": {
        "description": "The name of the Connection Broker Servers to be added to the DNS."
      }
    },
    "dnsServer": {
      "type": "string",
      "defaultValue": "NUKNJFVK72U4MRE",
      "metadata": {
        "description": "The name of the DNS Server to add the DNS entry to for the Connection Broker Names"
      }
    },
    "existingAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the administrator account"
      }
    },
    "existingAdminUsername": {
      "type": "string",
      "defaultValue": "ssubramanian",
      "metadata": {
        "description": "Name of domain user account with administrative priveledges to manage RDS deployment"
      }
    },
    "existingBrokerAvailabilitySet": {
      "type": "string",
      "defaultValue": "AsTRdcbh01",
      "metadata": {
        "description": "Availability set for RD Connection Brokers"
      }
    },
    "existingBrokerHostname": {
      "type": "string",
      "defaultValue": "VmWTRdcbh01",
      "metadata": {
        "description": "The host name of the existing Connection Broker vm"
      }
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "The domain to join the Connection Broker Machine to"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Subnet name"
      }
    },
    "existingVnetName": {
      "type": "string",
      "defaultValue": "VNAdminZone",
      "metadata": {
        "description": "Virtual network name"
      }
    },
    "primaryDbConnectionString": {
      "type": "string",
      "metadata": {
        "description": "Specifies the database primary connection string. The database connection string supports both high availability configurations: -- Dedicated database server. Uses Windows Authentication to connect to the databse. -- Shared database server. Uses database authentication (such as SQL authentication) with a user name and password to connect to the database."
      }
    },
    "sqlServer": {
      "type": "string",
      "defaultValue": "rdsservertest1.database.windows.net",
      "metadata": {
        "description": "The name of the SQL server that the database is located on (only required for the Dedicated database server case w/Windows Auth)"
      }
    },
    "windowsServerVersion": {
      "type": "string",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server version for the second Broker; should be same version as the first broker in the deployment"
      },
      "defaultValue": "2016-Datacenter"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/itsmine1986/rds-ha-broker/master/HAbrokerdel/"
    }
  },
  "variables": {
    "brokerVmName": "[concat(variables('vmPrefix'), '02')]",
    "brokerNicName": "[concat('Nc',variables('brokerVmName'))]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'newrdsh02igacr')]",
    "storageAccountType": "Standard_LRS",
    "sqlClientUrl": "http://go.microsoft.com/fwlink/?LinkID=239648&clcid=0x409",
    "vmPrefix": "VmWTRdcbh",
    "p": {
      "broker": "[concat(' -existingBroker ', parameters('existingBrokerHostname'))]",
      "connstr": "[concat(' -primaryDbConnectionString \"', parameters('primaryDbConnectionString'), '\"')]",
      "domain": "[concat(' -domainName ', parameters('existingDomainName'))]",
      "user": "[concat(' -username ', parameters('existingAdminUsername'))]",
      "pwd": "[concat(' -password ', parameters('existingAdminPassword'))]",
      "can": "[concat(' -clientAccessName \"', parameters('clientAccessName'), '\"')]",
      "sqlnclient": "[concat(' -sqlClientUrl \"', variables('sqlClientUrl'), '\"')]",
      "dnsserver": "[concat(' -dnsServer ', parameters('dnsServer'))]",
      "sqlserver": "[concat(' -sqlServer \"', parameters('sqlServer'), '\"')]"
    },
    "scriptParameters": "[concat(variables('p').broker, variables('p').connstr, variables('p').domain, variables('p').user, variables('p').pwd, variables('p').can, variables('p').sqlnclient, variables('p').dnsserver, variables('p').sqlserver)]",
    "scriptLocation": "[concat(parameters('_artifactsLocation'), '/Scripts')]",
    "scriptFileName": "RdcbHaPostConfig.ps1"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('brokerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('brokerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('brokerNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_A2"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('existingBrokerAvailabilitySet'))]"
        },
        "osProfile": {
          "computerName": "[variables('brokerVmName')]",
          "adminUsername": "[parameters('existingAdminUsername')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsServerVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "MdOVmWTRdcbh02",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('brokerNicName'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('brokerVmName'),'/configuration')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',variables('brokerVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.75",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\DomainJoin",
          "properties": {
            "domainName": "[parameters('existingDomainName')]",
            "adminCreds": {
              "UserName": "[parameters('existingAdminUsername')]",
              "Password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('existingAdminPassword')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('brokerVmName'),'/ha-broker-configuration')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('brokerVmName'),'/extensions/','configuration')]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[concat(variables('scriptLocation'), '/', variables('scriptFileName'))]"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[concat( 'powershell -noninteractive -executionpolicy bypass -file ', variables('scriptFileName'), variables('scriptParameters'), ' >> script.log 2>&1' )]"
        }
      }
    }
  ]
}